#!/usr/bin/env node

/* eslint-disable import/no-extraneous-dependencies, no-console */
const git = require('simple-git/promise');
const util = require('util');
const exec = util.promisify(require('child_process').exec);
const { argv: { branch, platform, token } } = require('yargs');
const checkVersion = require('./check-version');
const updateRemoteVersion = require('./update-remote');

const release = async () => {
  const track = branch === 'dev' ? 'alpha' : 'beta';

  // Get all tags, sort in desc order, and get latest from current track
  const gitTags = await git().tags();
  const gitTag = gitTags.all.reverse().find(tag => tag.indexOf(track) > -1);
  console.log(`Last Git tag: ${gitTag}`);

  // Get a new release version and update package.json
  const releaseVersion = checkVersion(branch, gitTag);
  console.log(`New release version: ${releaseVersion}`);

  console.log('TODO: stream output for the next command');
  console.log('npm run dist:mac');
  const { stdout1 } = await exec(`npm run dist:${platform}`);
  console.log(stdout1);

  // Only push git tag if on Travis
  if (platform === 'mac') {
    console.log('Configure Git for Travis CI user');
    await git().addConfig('user.email', 'travis@travis-ci.org');
    await git().addConfig('user.name', 'Travis CI');
    await git().addConfig('push.default', 'current');
    await git().checkout(branch);

    console.log('git tag new version and push');
    await git().addTag(releaseVersion);
    await git().pushTags(`https://${token}@github.com/khalisfoundation/sttm-desktop.git`);
  }

  if (branch === 'release') {
    updateRemoteVersion(platform);
  }
};

if (branch === 'release' || branch === 'master' || branch === 'dev') {
  release();
}
